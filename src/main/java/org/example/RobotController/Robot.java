package org.example.RobotController;// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: robot.proto
// Protobuf Java Version: 4.29.1

public final class Robot {
  private Robot() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 1,
      /* suffix= */ "",
      Robot.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface RobotDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RobotData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 sensor_value_1 = 1;</code>
     * @return The sensorValue1.
     */
    int getSensorValue1();

    /**
     * <code>int32 sensor_value_2 = 2;</code>
     * @return The sensorValue2.
     */
    int getSensorValue2();

    /**
     * <code>int32 sensor_value_3 = 3;</code>
     * @return The sensorValue3.
     */
    int getSensorValue3();

    /**
     * <code>int32 sensor_value_4 = 4;</code>
     * @return The sensorValue4.
     */
    int getSensorValue4();

    /**
     * <code>int32 sensor_value_5 = 5;</code>
     * @return The sensorValue5.
     */
    int getSensorValue5();

    /**
     * <code>int32 raw_angle_1 = 6;</code>
     * @return The rawAngle1.
     */
    int getRawAngle1();

    /**
     * <code>int32 raw_angle_2 = 7;</code>
     * @return The rawAngle2.
     */
    int getRawAngle2();

    /**
     * <code>float x_pos = 8;</code>
     * @return The xPos.
     */
    float getXPos();

    /**
     * <code>float y_pos = 9;</code>
     * @return The yPos.
     */
    float getYPos();

    /**
     * <code>float theta = 10;</code>
     * @return The theta.
     */
    float getTheta();
  }
  /**
   * Protobuf type {@code RobotData}
   */
  public static final class RobotData extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:RobotData)
      RobotDataOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 1,
        /* suffix= */ "",
        RobotData.class.getName());
    }
    // Use RobotData.newBuilder() to construct.
    private RobotData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private RobotData() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Robot.internal_static_RobotData_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Robot.internal_static_RobotData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RobotData.class, Builder.class);
    }

    public static final int SENSOR_VALUE_1_FIELD_NUMBER = 1;
    private int sensorValue1_ = 0;
    /**
     * <code>int32 sensor_value_1 = 1;</code>
     * @return The sensorValue1.
     */
    @Override
    public int getSensorValue1() {
      return sensorValue1_;
    }

    public static final int SENSOR_VALUE_2_FIELD_NUMBER = 2;
    private int sensorValue2_ = 0;
    /**
     * <code>int32 sensor_value_2 = 2;</code>
     * @return The sensorValue2.
     */
    @Override
    public int getSensorValue2() {
      return sensorValue2_;
    }

    public static final int SENSOR_VALUE_3_FIELD_NUMBER = 3;
    private int sensorValue3_ = 0;
    /**
     * <code>int32 sensor_value_3 = 3;</code>
     * @return The sensorValue3.
     */
    @Override
    public int getSensorValue3() {
      return sensorValue3_;
    }

    public static final int SENSOR_VALUE_4_FIELD_NUMBER = 4;
    private int sensorValue4_ = 0;
    /**
     * <code>int32 sensor_value_4 = 4;</code>
     * @return The sensorValue4.
     */
    @Override
    public int getSensorValue4() {
      return sensorValue4_;
    }

    public static final int SENSOR_VALUE_5_FIELD_NUMBER = 5;
    private int sensorValue5_ = 0;
    /**
     * <code>int32 sensor_value_5 = 5;</code>
     * @return The sensorValue5.
     */
    @Override
    public int getSensorValue5() {
      return sensorValue5_;
    }

    public static final int RAW_ANGLE_1_FIELD_NUMBER = 6;
    private int rawAngle1_ = 0;
    /**
     * <code>int32 raw_angle_1 = 6;</code>
     * @return The rawAngle1.
     */
    @Override
    public int getRawAngle1() {
      return rawAngle1_;
    }

    public static final int RAW_ANGLE_2_FIELD_NUMBER = 7;
    private int rawAngle2_ = 0;
    /**
     * <code>int32 raw_angle_2 = 7;</code>
     * @return The rawAngle2.
     */
    @Override
    public int getRawAngle2() {
      return rawAngle2_;
    }

    public static final int X_POS_FIELD_NUMBER = 8;
    private float xPos_ = 0F;
    /**
     * <code>float x_pos = 8;</code>
     * @return The xPos.
     */
    @Override
    public float getXPos() {
      return xPos_;
    }

    public static final int Y_POS_FIELD_NUMBER = 9;
    private float yPos_ = 0F;
    /**
     * <code>float y_pos = 9;</code>
     * @return The yPos.
     */
    @Override
    public float getYPos() {
      return yPos_;
    }

    public static final int THETA_FIELD_NUMBER = 10;
    private float theta_ = 0F;
    /**
     * <code>float theta = 10;</code>
     * @return The theta.
     */
    @Override
    public float getTheta() {
      return theta_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (sensorValue1_ != 0) {
        output.writeInt32(1, sensorValue1_);
      }
      if (sensorValue2_ != 0) {
        output.writeInt32(2, sensorValue2_);
      }
      if (sensorValue3_ != 0) {
        output.writeInt32(3, sensorValue3_);
      }
      if (sensorValue4_ != 0) {
        output.writeInt32(4, sensorValue4_);
      }
      if (sensorValue5_ != 0) {
        output.writeInt32(5, sensorValue5_);
      }
      if (rawAngle1_ != 0) {
        output.writeInt32(6, rawAngle1_);
      }
      if (rawAngle2_ != 0) {
        output.writeInt32(7, rawAngle2_);
      }
      if (Float.floatToRawIntBits(xPos_) != 0) {
        output.writeFloat(8, xPos_);
      }
      if (Float.floatToRawIntBits(yPos_) != 0) {
        output.writeFloat(9, yPos_);
      }
      if (Float.floatToRawIntBits(theta_) != 0) {
        output.writeFloat(10, theta_);
      }
      getUnknownFields().writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (sensorValue1_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, sensorValue1_);
      }
      if (sensorValue2_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, sensorValue2_);
      }
      if (sensorValue3_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, sensorValue3_);
      }
      if (sensorValue4_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, sensorValue4_);
      }
      if (sensorValue5_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, sensorValue5_);
      }
      if (rawAngle1_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, rawAngle1_);
      }
      if (rawAngle2_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, rawAngle2_);
      }
      if (Float.floatToRawIntBits(xPos_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, xPos_);
      }
      if (Float.floatToRawIntBits(yPos_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, yPos_);
      }
      if (Float.floatToRawIntBits(theta_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, theta_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof RobotData)) {
        return super.equals(obj);
      }
      RobotData other = (RobotData) obj;

      if (getSensorValue1()
          != other.getSensorValue1()) return false;
      if (getSensorValue2()
          != other.getSensorValue2()) return false;
      if (getSensorValue3()
          != other.getSensorValue3()) return false;
      if (getSensorValue4()
          != other.getSensorValue4()) return false;
      if (getSensorValue5()
          != other.getSensorValue5()) return false;
      if (getRawAngle1()
          != other.getRawAngle1()) return false;
      if (getRawAngle2()
          != other.getRawAngle2()) return false;
      if (Float.floatToIntBits(getXPos())
          != Float.floatToIntBits(
              other.getXPos())) return false;
      if (Float.floatToIntBits(getYPos())
          != Float.floatToIntBits(
              other.getYPos())) return false;
      if (Float.floatToIntBits(getTheta())
          != Float.floatToIntBits(
              other.getTheta())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SENSOR_VALUE_1_FIELD_NUMBER;
      hash = (53 * hash) + getSensorValue1();
      hash = (37 * hash) + SENSOR_VALUE_2_FIELD_NUMBER;
      hash = (53 * hash) + getSensorValue2();
      hash = (37 * hash) + SENSOR_VALUE_3_FIELD_NUMBER;
      hash = (53 * hash) + getSensorValue3();
      hash = (37 * hash) + SENSOR_VALUE_4_FIELD_NUMBER;
      hash = (53 * hash) + getSensorValue4();
      hash = (37 * hash) + SENSOR_VALUE_5_FIELD_NUMBER;
      hash = (53 * hash) + getSensorValue5();
      hash = (37 * hash) + RAW_ANGLE_1_FIELD_NUMBER;
      hash = (53 * hash) + getRawAngle1();
      hash = (37 * hash) + RAW_ANGLE_2_FIELD_NUMBER;
      hash = (53 * hash) + getRawAngle2();
      hash = (37 * hash) + X_POS_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getXPos());
      hash = (37 * hash) + Y_POS_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getYPos());
      hash = (37 * hash) + THETA_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getTheta());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static RobotData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RobotData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RobotData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RobotData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RobotData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RobotData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RobotData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static RobotData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static RobotData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static RobotData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static RobotData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static RobotData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(RobotData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code RobotData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:RobotData)
        RobotDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Robot.internal_static_RobotData_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Robot.internal_static_RobotData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RobotData.class, Builder.class);
      }

      // Construct using Robot.RobotData.newBuilder()
      private Builder() {

      }

      private Builder(
          BuilderParent parent) {
        super(parent);

      }
      @Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        sensorValue1_ = 0;
        sensorValue2_ = 0;
        sensorValue3_ = 0;
        sensorValue4_ = 0;
        sensorValue5_ = 0;
        rawAngle1_ = 0;
        rawAngle2_ = 0;
        xPos_ = 0F;
        yPos_ = 0F;
        theta_ = 0F;
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Robot.internal_static_RobotData_descriptor;
      }

      @Override
      public RobotData getDefaultInstanceForType() {
        return RobotData.getDefaultInstance();
      }

      @Override
      public RobotData build() {
        RobotData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public RobotData buildPartial() {
        RobotData result = new RobotData(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(RobotData result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.sensorValue1_ = sensorValue1_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.sensorValue2_ = sensorValue2_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.sensorValue3_ = sensorValue3_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.sensorValue4_ = sensorValue4_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.sensorValue5_ = sensorValue5_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.rawAngle1_ = rawAngle1_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.rawAngle2_ = rawAngle2_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.xPos_ = xPos_;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.yPos_ = yPos_;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.theta_ = theta_;
        }
      }

      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RobotData) {
          return mergeFrom((RobotData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RobotData other) {
        if (other == RobotData.getDefaultInstance()) return this;
        if (other.getSensorValue1() != 0) {
          setSensorValue1(other.getSensorValue1());
        }
        if (other.getSensorValue2() != 0) {
          setSensorValue2(other.getSensorValue2());
        }
        if (other.getSensorValue3() != 0) {
          setSensorValue3(other.getSensorValue3());
        }
        if (other.getSensorValue4() != 0) {
          setSensorValue4(other.getSensorValue4());
        }
        if (other.getSensorValue5() != 0) {
          setSensorValue5(other.getSensorValue5());
        }
        if (other.getRawAngle1() != 0) {
          setRawAngle1(other.getRawAngle1());
        }
        if (other.getRawAngle2() != 0) {
          setRawAngle2(other.getRawAngle2());
        }
        if (other.getXPos() != 0F) {
          setXPos(other.getXPos());
        }
        if (other.getYPos() != 0F) {
          setYPos(other.getYPos());
        }
        if (other.getTheta() != 0F) {
          setTheta(other.getTheta());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                sensorValue1_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                sensorValue2_ = input.readInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                sensorValue3_ = input.readInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                sensorValue4_ = input.readInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                sensorValue5_ = input.readInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                rawAngle1_ = input.readInt32();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 56: {
                rawAngle2_ = input.readInt32();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              case 69: {
                xPos_ = input.readFloat();
                bitField0_ |= 0x00000080;
                break;
              } // case 69
              case 77: {
                yPos_ = input.readFloat();
                bitField0_ |= 0x00000100;
                break;
              } // case 77
              case 85: {
                theta_ = input.readFloat();
                bitField0_ |= 0x00000200;
                break;
              } // case 85
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int sensorValue1_ ;
      /**
       * <code>int32 sensor_value_1 = 1;</code>
       * @return The sensorValue1.
       */
      @Override
      public int getSensorValue1() {
        return sensorValue1_;
      }
      /**
       * <code>int32 sensor_value_1 = 1;</code>
       * @param value The sensorValue1 to set.
       * @return This builder for chaining.
       */
      public Builder setSensorValue1(int value) {

        sensorValue1_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>int32 sensor_value_1 = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSensorValue1() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sensorValue1_ = 0;
        onChanged();
        return this;
      }

      private int sensorValue2_ ;
      /**
       * <code>int32 sensor_value_2 = 2;</code>
       * @return The sensorValue2.
       */
      @Override
      public int getSensorValue2() {
        return sensorValue2_;
      }
      /**
       * <code>int32 sensor_value_2 = 2;</code>
       * @param value The sensorValue2 to set.
       * @return This builder for chaining.
       */
      public Builder setSensorValue2(int value) {

        sensorValue2_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>int32 sensor_value_2 = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSensorValue2() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sensorValue2_ = 0;
        onChanged();
        return this;
      }

      private int sensorValue3_ ;
      /**
       * <code>int32 sensor_value_3 = 3;</code>
       * @return The sensorValue3.
       */
      @Override
      public int getSensorValue3() {
        return sensorValue3_;
      }
      /**
       * <code>int32 sensor_value_3 = 3;</code>
       * @param value The sensorValue3 to set.
       * @return This builder for chaining.
       */
      public Builder setSensorValue3(int value) {

        sensorValue3_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>int32 sensor_value_3 = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearSensorValue3() {
        bitField0_ = (bitField0_ & ~0x00000004);
        sensorValue3_ = 0;
        onChanged();
        return this;
      }

      private int sensorValue4_ ;
      /**
       * <code>int32 sensor_value_4 = 4;</code>
       * @return The sensorValue4.
       */
      @Override
      public int getSensorValue4() {
        return sensorValue4_;
      }
      /**
       * <code>int32 sensor_value_4 = 4;</code>
       * @param value The sensorValue4 to set.
       * @return This builder for chaining.
       */
      public Builder setSensorValue4(int value) {

        sensorValue4_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>int32 sensor_value_4 = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearSensorValue4() {
        bitField0_ = (bitField0_ & ~0x00000008);
        sensorValue4_ = 0;
        onChanged();
        return this;
      }

      private int sensorValue5_ ;
      /**
       * <code>int32 sensor_value_5 = 5;</code>
       * @return The sensorValue5.
       */
      @Override
      public int getSensorValue5() {
        return sensorValue5_;
      }
      /**
       * <code>int32 sensor_value_5 = 5;</code>
       * @param value The sensorValue5 to set.
       * @return This builder for chaining.
       */
      public Builder setSensorValue5(int value) {

        sensorValue5_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>int32 sensor_value_5 = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearSensorValue5() {
        bitField0_ = (bitField0_ & ~0x00000010);
        sensorValue5_ = 0;
        onChanged();
        return this;
      }

      private int rawAngle1_ ;
      /**
       * <code>int32 raw_angle_1 = 6;</code>
       * @return The rawAngle1.
       */
      @Override
      public int getRawAngle1() {
        return rawAngle1_;
      }
      /**
       * <code>int32 raw_angle_1 = 6;</code>
       * @param value The rawAngle1 to set.
       * @return This builder for chaining.
       */
      public Builder setRawAngle1(int value) {

        rawAngle1_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>int32 raw_angle_1 = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearRawAngle1() {
        bitField0_ = (bitField0_ & ~0x00000020);
        rawAngle1_ = 0;
        onChanged();
        return this;
      }

      private int rawAngle2_ ;
      /**
       * <code>int32 raw_angle_2 = 7;</code>
       * @return The rawAngle2.
       */
      @Override
      public int getRawAngle2() {
        return rawAngle2_;
      }
      /**
       * <code>int32 raw_angle_2 = 7;</code>
       * @param value The rawAngle2 to set.
       * @return This builder for chaining.
       */
      public Builder setRawAngle2(int value) {

        rawAngle2_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>int32 raw_angle_2 = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearRawAngle2() {
        bitField0_ = (bitField0_ & ~0x00000040);
        rawAngle2_ = 0;
        onChanged();
        return this;
      }

      private float xPos_ ;
      /**
       * <code>float x_pos = 8;</code>
       * @return The xPos.
       */
      @Override
      public float getXPos() {
        return xPos_;
      }
      /**
       * <code>float x_pos = 8;</code>
       * @param value The xPos to set.
       * @return This builder for chaining.
       */
      public Builder setXPos(float value) {

        xPos_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>float x_pos = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearXPos() {
        bitField0_ = (bitField0_ & ~0x00000080);
        xPos_ = 0F;
        onChanged();
        return this;
      }

      private float yPos_ ;
      /**
       * <code>float y_pos = 9;</code>
       * @return The yPos.
       */
      @Override
      public float getYPos() {
        return yPos_;
      }
      /**
       * <code>float y_pos = 9;</code>
       * @param value The yPos to set.
       * @return This builder for chaining.
       */
      public Builder setYPos(float value) {

        yPos_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>float y_pos = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearYPos() {
        bitField0_ = (bitField0_ & ~0x00000100);
        yPos_ = 0F;
        onChanged();
        return this;
      }

      private float theta_ ;
      /**
       * <code>float theta = 10;</code>
       * @return The theta.
       */
      @Override
      public float getTheta() {
        return theta_;
      }
      /**
       * <code>float theta = 10;</code>
       * @param value The theta to set.
       * @return This builder for chaining.
       */
      public Builder setTheta(float value) {

        theta_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>float theta = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearTheta() {
        bitField0_ = (bitField0_ & ~0x00000200);
        theta_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:RobotData)
    }

    // @@protoc_insertion_point(class_scope:RobotData)
    private static final RobotData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RobotData();
    }

    public static RobotData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RobotData>
        PARSER = new com.google.protobuf.AbstractParser<RobotData>() {
      @Override
      public RobotData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<RobotData> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<RobotData> getParserForType() {
      return PARSER;
    }

    @Override
    public RobotData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_RobotData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RobotData_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\013robot.proto\"\332\001\n\tRobotData\022\026\n\016sensor_va" +
      "lue_1\030\001 \001(\005\022\026\n\016sensor_value_2\030\002 \001(\005\022\026\n\016s" +
      "ensor_value_3\030\003 \001(\005\022\026\n\016sensor_value_4\030\004 " +
      "\001(\005\022\026\n\016sensor_value_5\030\005 \001(\005\022\023\n\013raw_angle" +
      "_1\030\006 \001(\005\022\023\n\013raw_angle_2\030\007 \001(\005\022\r\n\005x_pos\030\010" +
      " \001(\002\022\r\n\005y_pos\030\t \001(\002\022\r\n\005theta\030\n \001(\002b\006prot" +
      "o3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_RobotData_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_RobotData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_RobotData_descriptor,
        new String[] { "SensorValue1", "SensorValue2", "SensorValue3", "SensorValue4", "SensorValue5", "RawAngle1", "RawAngle2", "XPos", "YPos", "Theta", });
    descriptor.resolveAllFeaturesImmutable();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
